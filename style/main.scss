@import "helpers";
@import "fonts/clear-sans.css";

$field-width: 500px;
$grid-spacing: 15px;
$grid-row-cells: 4;
$tile-size: ($field-width - $grid-spacing * ($grid-row-cells + 1)) / $grid-row-cells;
$tile-border-radius: 3px;

$mobile-threshold: $field-width + 20px;


$background-color-cal: #003A70;
$secondary-color-cal: #FDD515;

$color-3-cal: #C2B9A7;
$color-4-cal: #D9661F;
$color-5-cal: #B9D3B6;
$color-6-cal: #53626F;
$color-7-cal: #6C3302;

$aux-color-cal: white;

$text-color-cal: $secondary-color-cal;
$secondary-text-color-cal: $background-color-cal;
$bright-text-color-cal: brighten($secondary-color-cal, 30%);
$secondary-bright-text-color-cal: brighten($background-color-cal, 30%);

$tile-color-cal: darken($secondary-color-cal, 25%);
$tile-gold-color-cal: $secondary-color-cal;
$tile-gold-glow-color-cal: lighten($tile-gold-color-cal, 15%);

$game-container-background-cal: $secondary-color-cal;


$background-color-stanf: #8C1515;
$secondary-color-stanf: white;
$stanf-grey: #4D4F53;

$color-3-stanf: #5E3032;
$color-4-stanf: #8D3C1E;
$color-5-stanf: #00505C;
$color-6-stanf: #175E54;
$color-7-stanf: #53284F;

$aux-color-stanf: black;

$text-color-stanf: $secondary-color-stanf;
$secondary-text-color-stanf: $background-color-stanf;
$bright-text-color-stanf: brighten($secondary-color-stanf, 30%);
$secondary-bright-text-color-stanf: brighten($background-color-stanf, 30%);

$tile-color-stanf: darken($secondary-color-stanf, 25%);
$tile-gold-color-stanf: $secondary-color-stanf;
$tile-gold-glow-color-stanf: lighten($tile-gold-color-stanf, 15%);

$game-container-background-stanf: $secondary-color-stanf;


$game-container-margin-top: 10px;

$transition-speed: 100ms;

html, body {
	margin: 0;
	padding: 0;

	overflow-x: hidden;

	font-family: "Clear Sans", "Helvetica Neue", Arial, sans-serif;
	font-size: 18px;
}

body {
	margin: 10px 0;
}

.wrapper.cal {
	background: $background-color-cal;
	color: $text-color-cal;
}

.wrapper.stanf {
	background: $background-color-stanf;
	color: $text-color-stanf;
}

.wrapper {
	width: 100%;
	position: absolute;
	top: 0;
}

.heading {
	@include clearfix;
}

h1.title {
	font-size: 50px;
	font-weight: bold;
	text-align: center;
	margin: 0;
	display: block;
}

h1.title.iefix {
	font-size: 40px;
}

@include keyframes(move-up) {
	0% {
		top: 25px;
		opacity: 1;
	}

	100% {
		top: -50px;
		opacity: 0;
	}
}

.scores-container {
	text-align: center;
	margin-bottom: 10px;
}

.cal .wins-container, .cal .losses-container, .cal .best-container {
	background: $game-container-background-cal;
	color: $aux-color-cal;

	&:after {
		color: $secondary-text-color-cal;
	}

	.score-addition {
		color: red;
		color: rgba($text-color-cal, .9);
	}
}

.stanf .wins-container, .stanf .losses-container, .stanf .best-container {
	background: $game-container-background-stanf;
	color: $aux-color-stanf;

	&:after {
		color: $secondary-text-color-stanf;
	}

	.score-addition {
		color: red;
		color: rgba($text-color-stanf, .9);
	}
}

.wins-container, .losses-container, .best-container {
	$height: 20px;

	position: relative;
	display: inline-block;
	padding: 15px 25px;
	font-size: $height;
	height: $height;
	line-height: $height + 15px;
	font-weight: bold;
	border-radius: 3px;
	margin-top: 8px;
	text-align: center;

	&:after {
		position: absolute;
		width: 100%;
		top: 5px;
		left: 0;
		text-transform: uppercase;
		font-size: 13px;
		line-height: 13px;
		text-align: center;
	}

	.score-addition {
		position: absolute;
		right: 30px;
		font-size: $height;
		line-height: $height;
		font-weight: bold;
		z-index: 100;
		@include animation(move-up 600ms ease-in);
		@include animation-fill-mode(both);
	}
}

.wins-container:after {
	content: "Wins";
}

.losses-container:after {
	content: "Losses";
}

.best-container:after {
	content: "Best"
}

.vote-container:after {
	content: "Votes";
}

.vote-bar-container {
	padding: 0 0 0 0;
	float: left;
	height: 50px;
	margin: 0px 0px 10px 0px;
	bottom: -20px;
}

.cal .vote-bar-background {
	background-color: $game-container-background-cal;
}

.stanf .vote-bar-background {
	background-color: $game-container-background-stanf;
}

.vote-bar-part-1 {
	height: 50px;
	width: 150px;
	display: table-cell;
	border-radius: 3px 0 0 3px;
	background-color: $game-container-background-cal;
	z-index: -10;
}

.cal .vote-bar-part-2 {
	background-color: $game-container-background-cal;
}

.stanf .vote-bar-part-2 {
	background-color: $stanf-grey;
}

.vote-bar-part-2 {
	margin: 0;
	height: 50px;
	width: 200px;
	display: table-cell;
	z-index: -10;
}

.vote-bar-part-3 {
	height: 50px;
	width: 150px;
	display: table-cell;
	border-radius: 0 3px 3px 0;
	background-color: $stanf-grey;
	z-index: -10;
}

.cal .vote-bar {
	background-color: darken($secondary-color-cal, 20%);
}

.stanf .vote-bar {
	background-color: darken($secondary-color-stanf, 20%);
}

.vote-bar.left {
	border-radius: 3px 0 0 3px;
}

.vote-bar.right {
	border-radius: 0 3px 3px 0;
}

.vote-bar {
	position: relative;
	height: 30px;
	top: -40px;
	left: 75px;
	width: 175px;
	z-index: 30;
}

.cal .vote-bar-divider {
	border-left: 1px solid $aux-color-cal;
}

.stanf .vote-bar-divider {
	border-left: 1px solid $aux-color-stanf;
}

.vote-bar-divider {
	position: relative;
	float: left;
	width: 1;
	left: 250px;
	z-index: 50;
	width: 0px;
	height: 50px;
	top: -50px;
}

.logo {
	position: relative;
	float: left;
	top: -87.5px;

	z-index: 40;
}

.cal.logo {
	right: 10px;
}

.stanf.logo {
	left: 380px;
}

.vote-button-iefix {
	display: none;
}

.stanf.logo.iefix {
	left: 280px;
}

.logo img {
	width: auto;
	height: 64px;
  cursor: pointer;
}

p {
	margin-top: 0;
	margin-bottom: 10px;
	line-height: 1.65;
}

.cal a {
	color: $text-color-cal;
}

.stanf a {
	color: $text-color-stanf;
}

a {
	font-weight: bold;
	text-decoration: underline;
	cursor: pointer;
}

strong {
	&.important {
		text-transform: uppercase;
	}
}

hr {
	border: none;
	margin-top: 20px;
	margin-bottom: 30px;
}

.cal hr {
	border-bottom: 1px solid $text-color-cal;
}

.stanf hr {
	border-bottom: 1px solid $text-color-stanf;
}

.container {
	width: $field-width;
	margin: 0 auto;
}

.box {
	margin-top: 20px;
	border-radius: 5px;
	padding: 10px;
	text-align: left;
}

.cal .box {
	background-color: $game-container-background-cal;
	color: $secondary-text-color-cal;
}

.stanf .box {
	background-color: $game-container-background-stanf;
	color: $secondary-text-color-stanf;
}

.commands {
  max-height: 400px;
  overflow: hidden;
  list-style-type: none; }

.command.valid-false {
  color: #999999; }

.name-field {
  font-size: 20px;
  font-family: inherit;
  padding: 10px;
  border-radius: 5px;
  width: 455px;
  outline: none;
  display: none;
  z-index: 100;
}

.edit .name-field {
  display: block;
}

.edit .welcome {
  display: none;
}

.welcome .name {
  font-weight: bold;
  text-decoration: underline;
  cursor: pointer;
}

.command {
  height: 20px;
  padding: 4px 0;
}

.command.direction-0:before { 
  content: "▲ ";
}

.command.direction-1:before { 
  content: "▶ ";
}

.command.direction-2:before { 
  content: "▼ ";
}

.command.direction-3:before { 
  content: "◀ ";
}

/*
.chat-entry {
	width: 89%;
	border: none;
	border-radius: 5px;
}

.cal .chat-entry-button {
	background-color: $background-color-cal;
	color: $text-color-cal;
}

.stanf .chat-entry-button {
	background-color: $background-color-stanf;
	color: $text-color-stanf;
}

.chat-entry-button {
	border: 0px;
	border-radius: 5px;
	padding: 5px;
	cursor: pointer;
}
*/

@include keyframes(fade-in) {
	0% {
		opacity: 0;
	}

	100% {
		opacity: 1;
	}
}

// Styles for buttons
@mixin button {
	display: inline-block;
	border-radius: 3px;
	padding: 0 20px;
	text-decoration: none;
	height: 40px;
	line-height: 42px;
}

@mixin button-cal {
	background: $game-container-background-cal;
	color: $secondary-text-color-cal;
}

@mixin button-stanf {
	background: $game-container-background-stanf;
	color: $secondary-text-color-stanf;
}

// Game field mixin used to render CSS at different width
@mixin game-field {
	.cal .game-container {
		background: $game-container-background-cal;
	}

	.stanf .game-container {
		background: $game-container-background-stanf;
	}

	.game-container {
		margin-top: $game-container-margin-top;
		position: relative;
		padding: $grid-spacing;

		cursor: default;
		-webkit-touch-callout: none;
		-ms-touch-callout: none;

		-webkit-user-select: none;
		-moz-user-select: none;
		-ms-user-select: none;

		-ms-touch-action: none;
		touch-action: none;

		border-radius: $tile-border-radius * 2;
		width: $field-width;
		height: $field-width;
		-webkit-box-sizing: border-box;
		-moz-box-sizing: border-box;
		box-sizing: border-box;

		.game-message {
			display: none;

			position: absolute;
			top: 0;
			right: 0;
			bottom: 0;
			left: 0;
			background: rgba($tile-color-cal, .5);
			z-index: 100;

			text-align: center;

			p {
				font-size: 60px;
				font-weight: bold;
				height: 60px;
				line-height: 60px;
				margin-top: 222px;
				// height: $field-width;
				// line-height: $field-width;
			}

			.lower {
				display: block;
				margin-top: 59px;
			}

			a {
				@include button;
				margin-left: 9px;
				// margin-top: 59px;

				.cal a {
					@include button-cal;
				}

				.stanf a {
					@include button-stanf;
				}

				&.keep-playing-button {
					display: none;
				}
			}

			@include animation(fade-in 800ms ease $transition-speed * 12);
			@include animation-fill-mode(both);

			.cal &.game-won {
				background: rgba($tile-gold-color-cal, .5);
				color: $bright-text-color-cal;
			}

			.stanf &.game-won {
				background: rgba($tile-gold-color-stanf, .5);
				color: $bright-text-color-stanf;
			}

			&.game-won {

				a.keep-playing-button {
					display: inline-block;
				}
			}

			&.game-won, &.game-over {
				display: block;
			}
		}
	}

	.grid-container {
		position: absolute;
		z-index: 1;
	}

	.grid-row {
		margin-bottom: $grid-spacing;

		&:last-child {
			margin-bottom: 0;
		}

		&:after {
			content: "";
			display: block;
			clear: both;
		}
	}

	.cal .grid-cell {
		background: rgba($tile-color-cal, .35);
	}

	.stanf .grid-cell {
		background: rgba($tile-color-stanf, .35);
	}

	.grid-cell {
		width: $tile-size;
		height: $tile-size;
		margin-right: $grid-spacing;
		float: left;

		border-radius: $tile-border-radius;

		&:last-child {
			margin-right: 0;
		}
	}

	.tile-container {
		position: absolute;
		z-index: 2;
	}

	.tile {
		&, .tile-inner {
			width: ceil($tile-size);
			height: ceil($tile-size);
			line-height: $tile-size + 10px;
		}

		// Build position classes
		@for $x from 1 through $grid-row-cells {
			@for $y from 1 through $grid-row-cells {
				&.tile-position-#{$x}-#{$y} {
					$xPos: floor(($tile-size + $grid-spacing) * ($x - 1));
					$yPos: floor(($tile-size + $grid-spacing) * ($y - 1));
					@include transform(translate($xPos, $yPos));
				}
			}
		}
	}
}

// End of game-field mixin
@include game-field;

.tile {
	position: absolute; // Makes transforms relative to the top-left corner

	.cal .tile-inner {
		background: $tile-color-cal;
	}

	.stanf .tile-inner {
		background: $tile-color-stanf;
	}

	.tile-inner {
		border-radius: $tile-border-radius;
		text-align: center;
		font-weight: bold;
		z-index: 10;

		font-size: 55px;
	}

	// Movement transition
	@include transition($transition-speed ease-in-out);
	-webkit-transition-property: -webkit-transform;
	-moz-transition-property: -moz-transform;
	transition-property: transform;

	$base: 2;
	$exponent: 1;
	$limit: 11;

	// Colors for all 11 states, false = no special color
	$special-colors-cal: $secondary-color-cal false, // 2
									 $color-3-cal false, // 4
									 $color-4-cal true, // 8
									 $color-5-cal true, // 16
									 $color-6-cal true, // 32
									 $color-7-cal true, // 64
									 false true, // 128
									 false true, // 256
									 false true, // 512
									 false true, // 1024
									 false true; // 2048

	// Colors for all 11 states, false = no special color
	$special-colors-stanf: $secondary-color-stanf false, // 2
									 $color-3-stanf false, // 4
									 $color-4-stanf true, // 8
									 $color-5-stanf true, // 16
									 $color-6-stanf true, // 32
									 $color-7-stanf true, // 64
									 false true, // 128
									 false true, // 256
									 false true, // 512
									 false true, // 1024
									 false true; // 2048

	// Build tile colors
	@while $exponent <= $limit {
		$power: pow($base, $exponent);

		.cal &.tile-#{$power} .tile-inner {
			// Calculate base background color
			$gold-percent: ($exponent - 1) / ($limit - 1) * 100;
			$mixed-background: mix(white, $background-color-cal, $gold-percent);

			$nth-color: nth($special-colors-cal, $exponent);

			$special-background: nth($nth-color, 1);
			$bright-color: nth($nth-color, 2);

			@if $special-background {
				$mixed-background: mix($special-background, $mixed-background, 55%);
			}
			
			color: $aux-color-cal;

			// Set background
			background: $mixed-background;

			// Add glow
			$glow-opacity: max($exponent - 4, 0) / ($limit - 4);

			@if not $special-background {
				box-shadow: 0 0 30px 10px rgba($tile-gold-glow-color-cal, $glow-opacity / 1.8),
										inset 0 0 0 1px rgba(white, $glow-opacity / 3);
			}

			// Adjust font size for bigger numbers
			@if $power >= 100 and $power < 1000 {
				font-size: 45px;

				// Media queries placed here to avoid carrying over the rest of the logic
				@include smaller($mobile-threshold) {
					font-size: 25px;
				}
			} @else if $power >= 1000 {
				font-size: 35px;

				@include smaller($mobile-threshold) {
					font-size: 15px;
				}
			}
		}

		.stanf &.tile-#{$power} .tile-inner {
			// Calculate base background color
			$gold-percent: ($exponent - 1) / ($limit - 1) * 100;
			$mixed-background: mix(white, $background-color-stanf, $gold-percent);

			$nth-color: nth($special-colors-stanf, $exponent);

			$special-background: nth($nth-color, 1);
			$bright-color: nth($nth-color, 2);

			@if $special-background {
				$mixed-background: mix($special-background, $mixed-background, 55%);
			}

			@if $bright-color {
				color: $bright-text-color-stanf;
			}

			// Set background
			background: $mixed-background;

			// Add glow
			$glow-opacity: max($exponent - 4, 0) / ($limit - 4);

			@if not $special-background {
				box-shadow: 0 0 30px 10px rgba($tile-gold-glow-color-stanf, $glow-opacity / 1.8),
										inset 0 0 0 1px rgba(white, $glow-opacity / 3);
			}

			// Adjust font size for bigger numbers
			@if $power >= 100 and $power < 1000 {
				font-size: 45px;

				// Media queries placed here to avoid carrying over the rest of the logic
				@include smaller($mobile-threshold) {
					font-size: 25px;
				}
			} @else if $power >= 1000 {
				font-size: 35px;

				@include smaller($mobile-threshold) {
					font-size: 15px;
				}
			}
		}

		$exponent: $exponent + 1;
	}

	// Super tiles (above 2048)
	.cal &.tile-super .tile-inner {
		color: $aux-color-cal; /*$bright-text-color-cal;*/
		background: mix(#333, $tile-gold-color-cal, 95%);

		font-size: 30px;

		@include smaller($mobile-threshold) {
			font-size: 10px;
		}
	}

	.stanf &.tile-super .tile-inner {
		color: $bright-text-color-stanf;
		background: mix(#333, $tile-gold-color-stanf, 95%);

		font-size: 30px;

		@include smaller($mobile-threshold) {
			font-size: 10px;
		}
	}
}

@include keyframes(appear) {
	0% {
		opacity: 0;
		@include transform(scale(0));
	}

	100% {
		opacity: 1;
		@include transform(scale(1));
	}
}

.tile-new .tile-inner {
	@include animation(appear 200ms ease $transition-speed);
	@include animation-fill-mode(backwards);
}

@include keyframes(pop) {
	0% {
		@include transform(scale(0));
	}

	50% {
		@include transform(scale(1.2));
	}

	100% {
		@include transform(scale(1));
	}
}

.tile-merged .tile-inner {
	z-index: 20;
	@include animation(pop 200ms ease $transition-speed);
	@include animation-fill-mode(backwards);
}

.above-game {
	@include clearfix;
	top: -200px;
	text-align: center;
}

.game-intro {
	line-height: 42px;
	margin-bottom: 0;
	display: inline-block;
}

.game-explanation {
	margin-top: 50px;
}

@include smaller($mobile-threshold) {
	// Redefine variables for smaller screens
	$field-width: 280px;
	$grid-spacing: 10px;
	$grid-row-cells: 4;
	$tile-size: ($field-width - $grid-spacing * ($grid-row-cells + 1)) / $grid-row-cells;
	$tile-border-radius: 3px;
	$game-container-margin-top: 17px;
  
  .above-game, .vote-bar-part-1, .vote-bar-part-2, .vote-bar-part-3,
  .vote-bar-divider, .vote-bar {
    display: none;
  }
  
  .vote-bar-container {
    height: 0;
  }
  
  .logo {
    top: -55px;
  }
  
  .stanf.logo {
    left: 140px;
  }
  
  .name-field {
    width: 235px;
  }
  
  .style-swap-button {
   	display: none;
  }
  
  
  
  

	html, body {
		font-size: 15px;
	}

	body {
		margin: 20px 0;
	}

	h1.title {
		font-size: 26px;
		margin-top: 15px;
		padding-bottom: 15px;
	}

	.container {
		width: $field-width;
		margin: 0 auto;
	}

	.wins-container, .losses-container, .best-container {
		margin-top: 0;
		padding: 15px 10px;
		min-width: 40px;
	}

	.heading {
		margin-bottom: 10px;
	}

	// Show intro and restart button side by side
	.game-intro {
		width: 55%;
		display: block;
		box-sizing: border-box;
		line-height: 1.65;
	}

	.restart-button {
		width: 42%;
		padding: 0;
		display: block;
		box-sizing: border-box;
		margin-top: 2px;
	}

	// Render the game field at the right width
	@include game-field;

	// Rest of the font-size adjustments in the tile class
	.tile .tile-inner {
		font-size: 35px;
	}

	.game-message {
		p {
			font-size: 30px !important;
			height: 30px !important;
			line-height: 30px !important;
			margin-top: 90px !important;
		}

		.lower {
			margin-top: 30px !important;
		}
	}

	.chat-entry {
		width: 80%;
	}
}

.style-swap-button {
  position: absolute;
  width: 312px;
  height: 512px;
  z-index: 0;
  overflow: hidden;
  cursor: pointer;
  opacity: 1;
  transition: 1s opacity;
  -webkit-transition: 1s opacity;
  -moz-transition: 1s opacity;
}

.style-swap-button.cal {
	left: 0px;
	top: 275px;
}

.wrapper.stanf .style-swap-button.cal img {
  opacity: 0.5;
}

.style-swap-button.stanf {
	right: 0px;
	top: 25px;
}

.wrapper.cal .style-swap-button.stanf img {
  background-image: url(public/stanford.png);
  opacity: 0.5;
}


@include smaller(1000px) {
  .style-swap-button {
   	opacity: 0;
  }
}

.commands {
  position: absolute;
  top: 330px;
  left: 50%;
  width: 120px;
  margin-left: 265px;
}

@include smaller(1380px) {
  .commands {
    position: relative;
    top: 0;
    left: 0;
    width: auto;
    margin-left: 0;
  }
}